<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hoperun.mapper.ExamStructMapper">
  <resultMap id="BaseResultMap" type="com.hoperun.domain.ExamStruct">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COL_EXAM_ID" jdbcType="INTEGER" property="colExamId" />
    <result column="COL_SUBJECT_TYPE" jdbcType="INTEGER" property="colSubjectType" />
    <result column="COL_SUBJECT_COUNT" jdbcType="INTEGER" property="colSubjectCount" />
    <result column="COL_SUBJECT_POINT" jdbcType="INTEGER" property="colSubjectPoint" />
    <result column="COL_DIFFICULT_LEVEL" jdbcType="INTEGER" property="colDifficultLevel" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, COL_EXAM_ID, COL_SUBJECT_TYPE, COL_SUBJECT_COUNT, COL_SUBJECT_POINT, COL_DIFFICULT_LEVEL
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_exam_struct
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 根据试卷id查询试卷的结构信息 -->
  <select id="getExamStructPojo" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_exam_struct
    where COL_EXAM_ID = #{colExamId,jdbcType=INTEGER} 
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_exam_struct
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hoperun.domain.ExamStruct">
    insert into tb_exam_struct (ID, COL_EXAM_ID, COL_SUBJECT_TYPE, 
      COL_SUBJECT_COUNT, COL_SUBJECT_POINT, COL_DIFFICULT_LEVEL)
    values (#{id,jdbcType=INTEGER}, #{colExamId,jdbcType=INTEGER}, #{colSubjectType,jdbcType=INTEGER}, 
      #{colSubjectCount,jdbcType=INTEGER}, #{colSubjectPoint,jdbcType=INTEGER}, #{colDifficultLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hoperun.domain.ExamStruct">
    insert into tb_exam_struct
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="colExamId != null">
        COL_EXAM_ID,
      </if>
      <if test="colSubjectType != null">
        COL_SUBJECT_TYPE,
      </if>
      <if test="colSubjectCount != null">
        COL_SUBJECT_COUNT,
      </if>
      <if test="colSubjectPoint != null">
        COL_SUBJECT_POINT,
      </if>
      <if test="colDifficultLevel != null">
        COL_DIFFICULT_LEVEL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="colExamId != null">
        #{colExamId,jdbcType=INTEGER},
      </if>
      <if test="colSubjectType != null">
        #{colSubjectType,jdbcType=INTEGER},
      </if>
      <if test="colSubjectCount != null">
        #{colSubjectCount,jdbcType=INTEGER},
      </if>
      <if test="colSubjectPoint != null">
        #{colSubjectPoint,jdbcType=INTEGER},
      </if>
      <if test="colDifficultLevel != null">
        #{colDifficultLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hoperun.domain.ExamStruct">
    update tb_exam_struct
    <set>
      <if test="colExamId != null">
        COL_EXAM_ID = #{colExamId,jdbcType=INTEGER},
      </if>
      <if test="colSubjectType != null">
        COL_SUBJECT_TYPE = #{colSubjectType,jdbcType=INTEGER},
      </if>
      <if test="colSubjectCount != null">
        COL_SUBJECT_COUNT = #{colSubjectCount,jdbcType=INTEGER},
      </if>
      <if test="colSubjectPoint != null">
        COL_SUBJECT_POINT = #{colSubjectPoint,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hoperun.domain.ExamStruct">
    update tb_exam_struct
    set COL_EXAM_ID = #{colExamId,jdbcType=INTEGER},
      COL_SUBJECT_TYPE = #{colSubjectType,jdbcType=INTEGER},
      COL_SUBJECT_COUNT = #{colSubjectCount,jdbcType=INTEGER},
      COL_SUBJECT_POINT = #{colSubjectPoint,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>